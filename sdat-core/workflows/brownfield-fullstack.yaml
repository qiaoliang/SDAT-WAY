workflow:
    id: brownfield-fullstack
    name: 旧有系统全栈增强
    description: >-
        Agent workflow，用于为现有全栈应用程序增强新功能、实现现代化或进行重大变更。负责现有系统分析与安全集成。
    type: brownfield
    project_types:
        - feature-addition
        - refactoring
        - modernization
        - integration-enhancement

    sequence:
        - step: enhancement_classification
          agent: analyst
          action: classify enhancement scope
          notes: |
              判断增强的复杂度以选择合适的流程路径：
              - 单一故事（< 4 小时）→ 使用 brownfield-create-story 任务
              - 小型功能（1-3 个故事）→ 使用 brownfield-create-epic 任务
              - 重大增强（多个史诗）→ 继续完整工作流

              询问用户：“请描述此次增强的范围？这是一个小修复、功能新增，还是需要架构变更的重大增强？”

        - step: routing_decision
          condition: based_on_classification
          routes:
              single_story:
                  agent: pm
                  uses: brownfield-create-story
                  notes: "为立即实现创建单一用户故事。创建完成后退出工作流。"
              small_feature:
                  agent: pm
                  uses: brownfield-create-epic
                  notes: "创建包含1-3个用户故事的聚焦史诗。史诗创建完成后退出工作流。"
              major_enhancement:
                  continue: to_next_step
                  notes: "继续执行下方的全面规划工作流。"

        - step: documentation_check
          agent: analyst
          action: check existing documentation
          condition: major_enhancement_path
          notes: |
              检查项目文档是否充分：
              - 查找现有的架构文档、API 规范、编码规范等
              - 评估文档是否最新且全面
              - 如果文档充分：跳过 document-project，直接进入 PRD 阶段
              - 如果文档不足：先执行 document-project

        - step: project_analysis
          agent: architect
          action: analyze existing project and use task document-project
          creates: brownfield-architecture.md (or multiple documents)
          condition: documentation_inadequate
          notes: "运行 document-project 以记录当前系统状态、技术债务和约束条件。将分析结果传递给 PRD 创建环节。"

        - agent: pm
          creates: prd.md
          uses: brownfield-prd-tmpl
          requires: existing_documentation_or_analysis
          notes: |
              创建重大增强的 PRD。如果已运行 document-project，请引用其输出以避免重复分析。
              如果跳过此步骤，则使用现有的项目文档。
              保存输出：将最终 prd.md 复制到你项目的 docs/ 文件夹中。

        - step: architecture_decision
          agent: pm/architect
          action: determine if architecture document needed
          condition: after_prd_creation
          notes: |
              审查 PRD，判断是否需要进行架构规划：
              - 新的架构模式 → 创建架构文档
              - 新的库/框架 → 创建架构文档
              - 平台/基础设施变更 → 创建架构文档
              - 遵循现有模式 → 跳过到故事创建

        - agent: architect
          creates: architecture.md
          uses: brownfield-architecture-tmpl
          requires: prd.md
          condition: architecture_changes_needed
          notes: "仅在存在重大架构变更时创建架构文档。保存输出：将最终的 architecture.md 复制到你项目的 docs/ 文件夹中。"

        - agent: po
          validates: all_artifacts
          uses: po-master-checklist
          notes: "验证所有文档的集成安全性和完整性。可能需要对任何文档进行更新。"

        - agent: various
          updates: any_flagged_documents
          condition: po_checklist_issues
          notes: "如果 @PO 发现问题，返回相关代理进行修复，并将更新后的文档重新导出到 docs/ 文件夹。"

        - agent: po
          action: shard_documents
          creates: sharded_docs
          requires: all_artifacts_in_project
          notes: |
              为 IDE 开发拆分文档：
              - 方案A：使用 PO 代理进行拆分：@po 然后请求拆分 docs/prd.md
              - 方案B：手动：将 shard-doc 任务和 docs/prd.md 拖入对话中
              - 生成带有拆分内容的 docs/prd/ 和 docs/architecture/ 文件夹

        - agent: sm
          action: create_story
          creates: story.md
          requires: sharded_docs_or_brownfield_docs
          repeats: for_each_epic_or_enhancement
          notes: |
              故事创建流程：
              - 对于已拆分的 PRD：@sm → *create（使用 create-next-story）
              - 对于 brownfield 文档：@sm → 使用 create-brownfield-story 任务
              - 基于现有文档创建故事
              - 故事初始状态为“Draft”
              - 对于 brownfield 可能需要额外收集上下文信息

        - agent: analyst/pm
          action: review_draft_story
          updates: story.md
          requires: story.md
          optional: true
          condition: user_wants_story_review
          notes: |
              可选：评审并批准故事草稿
              - 注意：故事评审任务即将上线
              - 检查故事的完整性与一致性
              - 更新故事状态：Draft（草稿）→ Approved（已批准）

        - agent: dev
          action: implement_story
          creates: implementation_files
          requires: story.md
          notes: |
              开发代理（新对话）：@dev
              - 实现已批准的故事
              - 更新文件列表，包含所有变更
              - 完成时将故事标记为"Review"

        - agent: qa
          action: review_implementation
          updates: implementation_files
          requires: implementation_files
          optional: true
          notes: |
              可选：QA 代理（新对话）：@qa → review-story
              - 高级开发评审，具备重构能力
              - 直接修复小问题
              - 为剩余项目留下检查清单
              - 更新故事状态（Review → Done 或保持 Review）

        - agent: dev
          action: address_qa_feedback
          updates: implementation_files
          condition: qa_left_unchecked_items
          notes: |
              如果 QA 留下未检查的项目：
              - 开发代理（新对话）：处理剩余项目
              - 返回 QA 进行最终批准

        - repeat_development_cycle:
          action: continue_for_all_stories
          notes: |
              对所有史诗故事重复故事周期（SM → Dev → QA）
              继续直到 PRD 中的所有故事都完成

        - agent: po
          action: epic_retrospective
          creates: epic-retrospective.md
          condition: epic_complete
          optional: true
          notes: |
              可选：史诗完成后
              - 注意：epic-retrospective 任务即将上线
              - 验证史诗是否正确完成
              - 记录学习经验和改进点

        - workflow_end:
          action: project_complete
          notes: |
              所有故事已实现并评审完成！
              项目开发阶段完成。

              参考：{root}/data/sdat-kb.md#IDE Development Workflow

    flow_diagram: |
        ```mermaid
        graph TD
            A[Start: Brownfield Enhancement] --> B[analyst: classify enhancement scope]
            B --> C{Enhancement Size?}

            C -->|Single Story| D[pm: brownfield-create-story]
            C -->|1-3 Stories| E[pm: brownfield-create-epic]
            C -->|Major Enhancement| F[analyst: check documentation]

            D --> END1[To Dev Implementation]
            E --> END2[To Story Creation]

            F --> G{Docs Adequate?}
            G -->|No| H[architect: document-project]
            G -->|Yes| I[pm: brownfield PRD]
            H --> I

            I --> J{Architecture Needed?}
            J -->|Yes| K[architect: architecture.md]
            J -->|No| L[po: validate artifacts]
            K --> L

            L --> M{PO finds issues?}
            M -->|Yes| N[Fix issues]
            M -->|No| O[po: shard documents]
            N --> L

            O --> P[sm: create story]
            P --> Q{Story Type?}
            Q -->|Sharded PRD| R[create-next-story]
            Q -->|Brownfield Docs| S[create-brownfield-story]

            R --> T{Review draft?}
            S --> T
            T -->|Yes| U[review & approve]
            T -->|No| V[dev: implement]
            U --> V

            V --> W{QA review?}
            W -->|Yes| X[qa: review]
            W -->|No| Y{More stories?}
            X --> Z{Issues?}
            Z -->|Yes| AA[dev: fix]
            Z -->|No| Y
            AA --> X
            Y -->|Yes| P
            Y -->|No| AB{Retrospective?}
            AB -->|Yes| AC[po: retrospective]
            AB -->|No| AD[Complete]
            AC --> AD

            style AD fill:#90EE90
            style END1 fill:#90EE90
            style END2 fill:#90EE90
            style D fill:#87CEEB
            style E fill:#87CEEB
            style I fill:#FFE4B5
            style K fill:#FFE4B5
            style O fill:#ADD8E6
            style P fill:#ADD8E6
            style V fill:#ADD8E6
            style U fill:#F0E68C
            style X fill:#F0E68C
            style AC fill:#F0E68C
        ```

    decision_guidance:
        when_to_use:
            - 增强需要协调的故事
            - 需要架构变更
            - 需要重要的集成工作
            - 需要风险评估和缓解规划
            - 多个团队成员将处理相关变更

    handoff_prompts:
        classification_complete: |
            增强分类为：{{enhancement_type}}
            {{if single_story}}：使用 brownfield-create-story 任务进行立即实现。
            {{if small_feature}}：使用 brownfield-create-epic 任务创建聚焦史诗。
            {{if major_enhancement}}：继续执行全面规划工作流。

        documentation_assessment: |
            文档评估完成：
            {{if adequate}}：现有文档充分。直接进入 PRD 创建。
            {{if inadequate}}：运行 document-project 在 PRD 之前捕获当前系统状态。

        document_project_to_pm: |
            项目分析完成。关键发现记录在：
            - {{document_list}}
            使用这些发现来指导 PRD 创建，避免重新分析相同方面。

        pm_to_architect_decision: |
            PRD 完成并保存为 docs/prd.md。
            识别的架构变更：{{yes/no}}
            {{if yes}}：继续创建架构文档：{{specific_changes}}
            {{if no}}：不需要架构变更。继续到验证。

        architect_to_po: "架构完成。保存为 docs/architecture.md。请验证所有工件的集成安全性。"

        po_to_sm: |
            所有工件已验证。
            可用文档类型：{{sharded_prd / brownfield_docs}}
            {{if sharded}}：使用标准 create-next-story 任务。
            {{if brownfield}}：使用 create-brownfield-story 任务处理各种文档格式。

        sm_story_creation: |
            从 {{documentation_type}} 创建故事。
            {{if missing_context}}：在故事创建过程中可能需要从用户收集额外的上下文。

        complete: "所有规划工件已验证，开发可以开始。故事将基于可用的文档格式创建。"
